name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      shell: bash
    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install --upgrade pip
        if (Test-Path requirements.txt) { pip install -r requirements.txt }
      shell: pwsh
    - name: Build executable with PyInstaller (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        python -m pip install pyinstaller
        pyinstaller --onefile main.py
      shell: bash
    - name: Build executable with PyInstaller (Windows)
      if: runner.os == 'Windows'
      run: |
        python -m pip install pyinstaller
        pyinstaller --onefile main.py
      shell: pwsh
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: application-${{ matrix.os }}
        path: dist/main

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: application-${{ matrix.os }}
    - name: Upload Release Assets
      uses: actions/upload-artifact@v3
      with:
        name: release-application
        path: dist/main
