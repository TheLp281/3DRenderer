name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            pyinstaller-args: ""
          - os: windows-latest
            pyinstaller-args: "--onefile --windowed"
          - os: macos-latest
            pyinstaller-args: ""

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build executable with PyInstaller
      run: |
        python -m pip install pyinstaller
        pyinstaller ${{ matrix.pyinstaller-args }} main.py
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: application-${{ matrix.os }}
        path: dist/main

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: application-ubuntu-latest
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: application-windows-latest
    - name: Download Build Artifacts
      uses: actions/download-artifact@v3
      with:
        name: application-macos-latest
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          dist/main-ubuntu-latest
          dist/main-windows-latest
          dist/main-macos-latest
